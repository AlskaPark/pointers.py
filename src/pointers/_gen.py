import ctypes

dll = ctypes.CDLL("libc.so.6")


def main(input_str: str) -> None:
    for i in input_str.split("\n"):
        prefix = i[: i.index("(")]
        name = prefix[prefix.rfind(" ") + 1 :]
        try:
            getattr(dll, name)
            print(i)
        except:
            continue


main(
    """# int isalnum(int c)
# int isalpha(int c)
# int iscntrl(int c)
# int isdigit(int c)
# int isgraph(int c)
# int islower(int c)
# int isprint(int c)
# int ispunct(int c)
# int isspace(int c)
# int isupper(int c)
# int isxdigit(int c)
# int tolower(int c)
# int toupper(int c)
# char* setlocale(int category, const char* locale)
# struct lconv* localeconv(void)
# double asin(double x)
# double atan(double x)
# double atan2(double y, double x)
# double cos(double x)
# double cosh(double x)
# double sin(double x)
# double sinh(double x)
# double tanh(double x)
# double exp(double x)
# double frexp(double x, int* exponent)
# double ldexp(double x, int exponent)
# double log(double x)
# double log10(double x)
# double modf(double x, double* integer)
# double pow(double x, double y)
# double sqrt(double x)
# double ceil(double x)
# double fabs(double x)
# double floor(double x)
# double fmod(double x, double y)
# int raise(int sig)
# void va_start(va_list ap, last_arg)
# type va_arg(va_list ap, type)
# void va_end(va_list ap)
# int fclose(FILE* stream)
# void clearerr(FILE* stream)
# int feof(FILE* stream)
# int ferror(FILE* stream)
# int fflush(FILE* stream)
# int fgetpos(FILE* stream, fpos_t* pos)
# FILE* fopen(const char* filename, const char* mode)
# size_t fread(void* ptr, size_t size, size_t nmemb, FILE* stream)
# FILE* freopen(const char* filename, const char* mode, FILE* stream)
# int fseek(FILE* stream, long int offset, int whence)
# int fsetpos(FILE* stream, const fpos_t* pos)
# long int ftell(FILE* stream)
# size_t fwrite(const void* ptr, size_t size, size_t nmemb, FILE* stream)
# int remove(const char* filename)
# int rename(const char* old_filename, const char* new_filename)
# void rewind(FILE* stream)
# void setbuf(FILE* stream, char* buffer)
# int setvbuf(FILE* stream, char* buffer, int mode, size_t size)
# FILE* tmpfile(void)
# char* tmpnam(char* str)
# int fprintf(FILE* stream, const char* format, ...)
# int printf(const char* format, ...)
# int sprintf(char* str, const char* format, ...)
# int vfprintf(FILE* stream, const char* format, va_list arg)
# int vprintf(const char* format, va_list arg)
# int vsprintf(char* str, const char* format, va_list arg)
# int fscanf(FILE* stream, const char* format, ...)
# int scanf(const char* format, ...)
# int sscanf(const char* str, const char* format, ...)
# int fgetc(FILE* stream)
# char* fgets(char* str, int n, FILE* stream)
# int fputc(int char, FILE* stream)
# int fputs(const char* str, FILE* stream)
# int getc(FILE* stream)
# int getchar(void)
# char* gets(char* str)
# int putc(int char, FILE* stream)
# int putchar(int char)
# int puts(const char* str)
# int ungetc(int char, FILE* stream)
# void perror(const char* str)
# double strtod(const char* str, char* *endptr)
# long int strtol(const char* str, char* *endptr, int base)
# unsigned long int strtoul(const char* str, char* *endptr, int base)
# void* calloc(size_t nitems, size_t size)
# void free(void* ptr
# void* malloc(size_t size)
# void* realloc(void* ptr, size_t size)
# void abort(void)
# int atexit(void (*func)(void))
# void exit(int status)
# char* getenv(const char* name)
# int system(const char* string)
# void* bsearch(const void* key, const void* base, size_t nitems, size_t size, int (*compar)(const void* , const void* ))
# void qsort(void* base, size_t nitems, size_t size, int (*compar)(const void* , const void*))
# int abs(int x)
# div_t div(int numer, int denom)
# long int labs(long int x)
# ldiv_t ldiv(long int numer, long int denom)
# int rand(void)
# void srand(unsigned int seed)
# int mblen(const char* str, size_t n)
# size_t mbstowcs(schar_t* pwcs, const char* str, size_t n)
# int mbtowc(whcar_t* pwc, const char* str, size_t n)
# size_t wcstombs(char* str, const wchar_t* pwcs, size_t n)
# int wctomb(char* str, wchar_t wchar)
# void* memchr(const void* str, int c, size_t n)
# int memcmp(const void* str1, const void* str2, size_t n)
# void* memcpy(void* dest, const void* src, size_t n)
# void* memmove(void* dest, const void* src, size_t n)
# void* memset(void* str, int c, size_t n)
# char* strcat(char* dest, const char* src)
# char* strncat(char* dest, const char* src, size_t n)
# char* strchr(const char* str, int c)
# int strcmp(const char* str1, const char* str2)
# int strncmp(const char* str1, const char* str2, size_t n)
# int strcoll(const char* str1, const char* str2)
# char* strcpy(char* dest, const char* src)
# char* strncpy(char* dest, const char* src, size_t n)
# size_t strcspn(const char* str1, const char* str2)
# char* strerror(int errnum)
# size_t strlen(const char* str)
# char* strpbrk(const char* str1, const char* str2)
# char* strrchr(const char* str, int c)
# size_t strspn(const char* str1, const char* str2)
# char* strstr(const char* haystack, const char* needle)
# char* strtok(char* str, const char* delim)
# size_t strxfrm(char* dest, const char* src, size_t n)
# char* asctime(const struct tm *timeptr)
# clock_t clock(void)
# char* ctime(const time_t *timer)
# double difftime(time_t time1, time_t time2)
# struct tm* gmtime(const time_t *timer)
# struct tm* localtime(const time_t *timer)
# time_t mktime(struct tm *timeptr)
# size_t strftime(char *str, size_t maxsize, const char *format, const struct tm *timeptr)
# time_t time(time_t *timer)"""
)
